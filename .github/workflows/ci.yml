name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 型安全性とコード品質チェック
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci


      - name: TypeScript type checking
        run: npm run typecheck

      - name: ESLint strict checking (fail on errors only)
        run: |
          npm run lint 2>&1 | tee lint-output.log || true
          if grep -q " error " lint-output.log; then
            echo "❌ ESLint errors detected!"
            cat lint-output.log
            exit 1
          else
            echo "✅ ESLint passed (warnings are acceptable)"
          fi
          rm -f lint-output.log

      - name: Prettier format checking
        run: npx prettier --check "src/**/*.ts" "test/**/*.ts" "bin/**/*.ts"

  # テスト実行
  test:
    runs-on: ubuntu-latest
    name: Test Suite
    needs: code-quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project for E2E tests
        run: npm run build

      - name: Run unit tests
        run: npm run test

      - name: Check test coverage
        run: npm run test -- --coverage

  # ビルドテスト
  build:
    runs-on: ubuntu-latest
    name: Build Test
    needs: code-quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clean and build project
        run: |
          rm -rf dist
          npm run build

      - name: Verify build output
        run: |
          echo "📁 Checking build output..."
          ls -la
          if [ ! -d "dist" ]; then
            echo "❌ Build failed - dist directory not found"
            exit 1
          fi
          echo "📂 Contents of dist directory:"
          ls -la dist/
          if [ ! -f "dist/index.js" ]; then
            echo "❌ Build failed - main output file not found"
            echo "Expected: dist/index.js"
            echo "Available files:"
            find dist -name "*.js" -type f
            exit 1
          fi
          if [ ! -f "dist/bin/coverage-runner.js" ]; then
            echo "❌ Build failed - CLI binary not found"
            exit 1
          fi
          echo "✅ Build successful"

  # マルチ環境テスト
  multi-node-test:
    runs-on: ubuntu-latest
    name: Node.js ${{ matrix.node-version }} Test
    needs: test
    strategy:
      matrix:
        node-version: [16, 18, 20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm run test
